package package0; import java.util.ArrayList; import java.util.Collections; public class GeneticProgram { public static ArrayList<Long> compute(ArrayList<Long> values00) { ArrayList<Long> values01 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values02 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values03 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values04 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values05 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values06 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values07 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values08 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); ArrayList<Long> values09 = new ArrayList<Long>(Collections.nCopies(values00.size(), new Long( 0 ))); Long value00 = new Long(0); Long value01 = new Long(0); Long value02 = new Long(0); Long value03 = new Long(0); Long value04 = new Long(0); Long value05 = new Long(0); Long value06 = new Long(0); Long value07 = new Long(0); Long value08 = new Long(0); Long value09 = new Long(0); ArrayList<Boolean> conditions00 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions01 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions02 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions03 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions04 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions05 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions06 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions07 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions08 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); ArrayList<Boolean> conditions09 = new ArrayList<Boolean>(Collections.nCopies(values00.size(), false )); Boolean condition00 = new Boolean(false); Boolean condition01 = new Boolean(false); Boolean condition02 = new Boolean(false); Boolean condition03 = new Boolean(false); Boolean condition04 = new Boolean(false); Boolean condition05 = new Boolean(false); Boolean condition06 = new Boolean(false); Boolean condition07 = new Boolean(false); Boolean condition08 = new Boolean(false); Boolean condition09 = new Boolean(false); {values00.set(new Long( 0 ).intValue(), new Long( 0 ));}  return values00; } } 