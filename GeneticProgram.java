package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { if ( true ) { values00 . set ( new Long ( 59 ) . intValue ( ) % size , new Long ( ( 95 + ( ( ( ( 28 * 96 ) - 17 ) | 8 ) * ( 88 ^ ( ( 93 * 86 ) * 93 ) ) ) ) ) ) ; } else { } if ( true ) { values00 . set ( new Long ( 48 ) . intValue ( ) % size , new Long ( ( value03 + ( ( ( ( 38 * 81 ) - value03 ) | value03 ) * ( values07 . size ( ) ^ ( ( 68 * 99 ) * 86 ) ) ) ) ) ) ; } else { } if ( true ) { values00 . set ( new Long ( 21 ) . intValue ( ) % size , new Long ( ( values08.size() + ( ( ( ( 90 * 62 ) - 97 ) | 66 ) * ( values01 . size ( ) ^ ( ( values05 . size ( ) * 85 ) * 80 ) ) ) ) ) ) ; } else { } if ( true ) { values00 . set ( new Long ( 97 ) . intValue ( ) % size , new Long ( ( 81 + ( ( ( 84 * 76 ) * 58 ) * ( value02 ^ ( 68 * 62 ) ) ) ) ) ) ; } else { } if ( ( ! false ) ) { values00 . set ( new Long ( value02 ) . intValue ( ) % size , new Long ( 57 ) ) ; } else { } } catch ( Exception e ) { values00 . clear ( ) ; } } } 