2017-02-11 08:37:21 INFO minijava.Main selection NEW0ID0Fitness{fit=0.22151807442666538,difference=1364972353,size=3273,speed=43}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 8 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:22 INFO minijava.Main selection NEW1ID0Fitness{fit=0.22124866406769889,difference=1369217057,size=3273,speed=7}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 8 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:22 INFO minijava.Main selection Fitness{fit=0.22124866406769889,difference=1369217057,size=3273,speed=7}4090
2017-02-11 08:37:22 INFO minijava.Main selection BST2ID1Fitness{fit=0.22105054773435415,difference=1382869577,size=3273,speed=19}package package1; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 8 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:25 INFO minijava.Main selection Fitness{fit=0.22105054773435415,difference=1382869577,size=3273,speed=19}4090
2017-02-11 08:37:25 INFO minijava.Main selection BST7ID0Fitness{fit=0.21712499894514167,difference=1362272555,size=3273,speed=5}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 8 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:26 INFO minijava.Main selection Fitness{fit=0.21712499894514167,difference=1362272555,size=3273,speed=5}4089
2017-02-11 08:37:26 INFO minijava.Main selection BST11ID0Fitness{fit=0.21664858927326494,difference=1354226831,size=3273,speed=30}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 8 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:28 INFO minijava.Main selection Fitness{fit=0.21664858927326494,difference=1354226831,size=3273,speed=30}4088
2017-02-11 08:37:28 INFO minijava.Main selection BST17ID1Fitness{fit=0.21645222901080216,difference=1335608305,size=3273,speed=7}package package1; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:29 INFO minijava.Main selection Fitness{fit=0.21645222901080216,difference=1335608305,size=3273,speed=7}4087
2017-02-11 08:37:29 INFO minijava.Main selection BST20ID0Fitness{fit=0.21639943975705625,difference=1354623467,size=3273,speed=5}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:37 INFO minijava.Main selection Fitness{fit=0.21639943975705625,difference=1354623467,size=3273,speed=5}4068
2017-02-11 08:37:37 INFO minijava.Main selection BST48ID0Fitness{fit=0.21637934074126144,difference=1343978972,size=3273,speed=6}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:43 INFO minijava.Main selection Fitness{fit=0.21637934074126144,difference=1343978972,size=3273,speed=6}4049
2017-02-11 08:37:43 INFO minijava.Main selection BST66ID2Fitness{fit=0.21394463094081606,difference=1331219009,size=3273,speed=8}package package2; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 9 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 8 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 8 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 3 , values00 , values00 , 9 , 7 ) ; Util . f ( 9 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 7 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:37:47 INFO minijava.Main selection Fitness{fit=0.21394463094081606,difference=1331219009,size=3273,speed=8}4036
2017-02-11 08:37:47 INFO minijava.Main selection BST76ID0Fitness{fit=0.21129419552140408,difference=1308888196,size=3273,speed=8}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 7 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:39:46 INFO minijava.Main selection Restarting
2017-02-11 08:39:46 INFO minijava.Main selection NEW1ID0Fitness{fit=0.22052778227060169,difference=1374387343,size=3273,speed=6}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 7 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:39:46 INFO minijava.Main selection Fitness{fit=0.22052778227060169,difference=1374387343,size=3273,speed=6}4090
2017-02-11 08:39:46 INFO minijava.Main selection BST2ID1Fitness{fit=0.2197964878101197,difference=1365173616,size=3273,speed=5}package package1; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 7 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:39:48 INFO minijava.Main selection Fitness{fit=0.2197964878101197,difference=1365173616,size=3273,speed=5}4090
2017-02-11 08:39:48 INFO minijava.Main selection BST3ID3Fitness{fit=0.21942436664969092,difference=1360380058,size=3273,speed=8}package package3; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 7 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:39:50 INFO minijava.Main selection Fitness{fit=0.21942436664969092,difference=1360380058,size=3273,speed=8}4090
2017-02-11 08:39:50 INFO minijava.Main selection BST6ID2Fitness{fit=0.216426327588793,difference=1345798117,size=3273,speed=13}package package2; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 7 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 57 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:39:54 INFO minijava.Main selection Fitness{fit=0.216426327588793,difference=1345798117,size=3273,speed=13}4090
2017-02-11 08:39:54 INFO minijava.Main selection BST10ID2Fitness{fit=0.2161351227379544,difference=1351727541,size=3273,speed=7}package package2; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 7 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 57 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:39:59 INFO minijava.Main selection Fitness{fit=0.2161351227379544,difference=1351727541,size=3273,speed=7}4088
2017-02-11 08:39:59 INFO minijava.Main selection BST16ID3Fitness{fit=0.21592031166994888,difference=1331625265,size=3273,speed=8}package package3; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 7 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:40:58 INFO minijava.Main selection Fitness{fit=0.21592031166994888,difference=1331625265,size=3273,speed=8}4060
2017-02-11 08:40:58 INFO minijava.Main selection BST56ID4Fitness{fit=0.2135222693595422,difference=1326171039,size=3273,speed=16}package package4; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:45:35 INFO minijava.Main selection Restarting
2017-02-11 08:45:37 INFO minijava.Main selection NEW1ID1Fitness{fit=0.22060441860783703,difference=1362006279,size=3273,speed=2172}package package1; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:45:40 INFO minijava.Main selection Fitness{fit=0.22060441860783703,difference=1362006279,size=3273,speed=2172}4090
2017-02-11 08:45:40 INFO minijava.Main selection BST2ID0Fitness{fit=0.2176846183398546,difference=1342433202,size=3273,speed=18}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:46:14 INFO minijava.Main selection Fitness{fit=0.2176846183398546,difference=1342433202,size=3273,speed=18}4088
2017-02-11 08:46:14 INFO minijava.Main selection BST15ID5Fitness{fit=0.21573137439052362,difference=1324667886,size=3273,speed=2213}package package5; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 4 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 08:46:50 INFO minijava.Main selection Fitness{fit=0.21573137439052362,difference=1324667886,size=3273,speed=2213}4082
2017-02-11 08:46:50 INFO minijava.Main selection BST29ID4Fitness{fit=0.21190076486879234,difference=1316846156,size=3273,speed=6}package package4; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 2 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 09:09:30 INFO minijava.Main selection NEW1001ID5Fitness{fit=0.22051138994278183,difference=1357185217,size=3273,speed=8}package package5; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 2 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 09:09:34 INFO minijava.Main selection Fitness{fit=0.22051138994278183,difference=1357185217,size=3273,speed=8}4090
2017-02-11 09:09:34 INFO minijava.Main selection BST1004ID0Fitness{fit=0.22046802074249403,difference=1362695274,size=3273,speed=7}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 2 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 09:09:34 INFO minijava.Main selection Fitness{fit=0.22046802074249403,difference=1362695274,size=3273,speed=7}4090
2017-02-11 09:09:34 INFO minijava.Main selection BST1005ID0Fitness{fit=0.21622556098306947,difference=1337005356,size=3273,speed=13}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 2 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 09:10:07 INFO minijava.Main selection Fitness{fit=0.21622556098306947,difference=1337005356,size=3273,speed=13}4083
2017-02-11 09:10:07 INFO minijava.Main selection BST1028ID0Fitness{fit=0.21430370308812588,difference=1320211813,size=3273,speed=5}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 2 , values00 , values00 , 4 , 3 ) ; Util . f ( 6 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 09:11:08 INFO minijava.Main selection Fitness{fit=0.21430370308812588,difference=1320211813,size=3273,speed=5}4046
2017-02-11 09:11:08 INFO minijava.Main selection BST1068ID0Fitness{fit=0.21414800610289256,difference=1327014493,size=3273,speed=11}package package0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 2 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 09:12:53 INFO minijava.Main selection Fitness{fit=0.21414800610289256,difference=1327014493,size=3273,speed=11}3915
2017-02-11 09:12:53 INFO minijava.Main selection BST1139ID3Fitness{fit=0.21382579251085898,difference=1327021465,size=3273,speed=7}package package3; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 2 , values00 , values00 , 8 , 0 ) ; Util . f ( 2 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 0 , values00 , values00 , 6 , 4 ) ; Util . f ( 0 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 6 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 8 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 0 , values00 , values00 , 4 , 3 ) ; Util . f ( 2 , values00 , values00 , 3 , 1 ) ; Util . f ( 5 , values00 , values00 , 5 , 2 ) ; Util . f ( 8 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 27 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
2017-02-11 09:16:45 INFO minijava.Main selection Fitness{fit=0.21382579251085898,difference=1327021465,size=3273,speed=7}3471
2017-02-11 09:16:45 INFO minijava.Main selection BST1292ID3Fitness{fit=0.21278936770149678,difference=1336152471,size=3272,speed=6}package package3; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; ArrayList < Boolean > conditions00 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions01 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions02 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions03 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions04 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions05 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions06 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions07 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions08 = new ArrayList < Boolean > ( size ) ; ArrayList < Boolean > conditions09 = new ArrayList < Boolean > ( size ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { Util . f ( 5 , values00 , values00 , 3 , 4 ) ; Util . f ( 3 , values00 , values00 , 8 , 0 ) ; Util . f ( 9 , values00 , values00 , 1 , 2 ) ; Util . f ( 6 , values00 , values00 , 7 , 6 ) ; Util . f ( 8 , values00 , values00 , 9 , 1 ) ; Util . f ( 5 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 2 , 4 ) ; Util . f ( 4 , values00 , values00 , 5 , 3 ) ; Util . f ( 7 , values00 , values00 , 7 , 5 ) ; Util . f ( 9 , values00 , values00 , 8 , 5 ) ; Util . f ( 8 , values00 , values00 , 4 , 0 ) ; Util . f ( 1 , values00 , values00 , 9 , 7 ) ; Util . f ( 0 , values00 , values00 , 6 , 1 ) ; Util . f ( 2 , values00 , values00 , 4 , 3 ) ; Util . f ( 4 , values00 , values00 , 3 , 1 ) ; Util . f ( 1 , values00 , values00 , 5 , 2 ) ; Util . f ( 3 , values00 , values00 , 6 , 4 ) ; Util . f ( 7 , values00 , values00 , 8 , 7 ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 
