package species0.id0; import java . lang . Exception ; import java . util . ArrayList ; import minijava . Util ; public class GeneticProgram { public static void compute ( ArrayList < Long > values00 ) { int size = values00 . size ( ) ; ArrayList < Long > values01 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values02 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values03 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values04 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values05 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values06 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values07 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values08 = new ArrayList < Long > ( values00 ) ; ArrayList < Long > values09 = new ArrayList < Long > ( values00 ) ; Long value00 = new Long ( 0 ) ; Long value01 = new Long ( 0 ) ; Long value02 = new Long ( 0 ) ; Long value03 = new Long ( 0 ) ; Long value04 = new Long ( 0 ) ; Long value05 = new Long ( 0 ) ; Long value06 = new Long ( 0 ) ; Long value07 = new Long ( 0 ) ; Long value08 = new Long ( 0 ) ; Long value09 = new Long ( 0 ) ; Boolean condition00 = new Boolean ( false ) ; Boolean condition01 = new Boolean ( false ) ; Boolean condition02 = new Boolean ( false ) ; Boolean condition03 = new Boolean ( false ) ; Boolean condition04 = new Boolean ( false ) ; Boolean condition05 = new Boolean ( false ) ; Boolean condition06 = new Boolean ( false ) ; Boolean condition07 = new Boolean ( false ) ; Boolean condition08 = new Boolean ( false ) ; Boolean condition09 = new Boolean ( false ) ; try { values00 . set ( new Long ( 8 ) . intValue ( ) % size , new Long ( ( ( Util . f ( 25 , 66 ) | ( 80 * ( 31 + value08 ) ) ) + values03 . size ( ) ) ) ) ; } catch ( Exception e ) { values00 . clear ( ) ; } } } 